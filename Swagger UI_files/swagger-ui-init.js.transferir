
window.onload = function() {
  // Build a system
  let url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  let options = {
  "swaggerDoc": {
    "openapi": "3.0.0",
    "paths": {
      "/estacionamentos": {
        "post": {
          "operationId": "EstacionamentoController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Estacionamento Central",
                    "localizacao": "Rua Principal, 123",
                    "capacidade": 50
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Estacionamento criado com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria um novo estacionamento",
          "tags": [
            "Estacionamentos"
          ]
        }
      },
      "/estacionamentos/{id}": {
        "get": {
          "operationId": "EstacionamentoController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do estacionamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Estacionamento encontrado."
            },
            "404": {
              "description": "Estacionamento não encontrado."
            }
          },
          "summary": "Retorna um estacionamento pelo ID",
          "tags": [
            "Estacionamentos"
          ]
        },
        "put": {
          "operationId": "EstacionamentoController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do estacionamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Estacionamento Atualizado",
                    "localizacao": "Avenida Nova, 456",
                    "capacidade": 60
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Estacionamento atualizado com sucesso."
            },
            "404": {
              "description": "Estacionamento não encontrado."
            }
          },
          "summary": "Atualiza os dados de um estacionamento",
          "tags": [
            "Estacionamentos"
          ]
        },
        "delete": {
          "operationId": "EstacionamentoController_remove",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do estacionamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Estacionamento excluído com sucesso."
            },
            "404": {
              "description": "Estacionamento não encontrado."
            }
          },
          "summary": "Exclui um estacionamento pelo ID",
          "tags": [
            "Estacionamentos"
          ]
        }
      },
      "/estacionamentos/{id}/monitorar": {
        "get": {
          "operationId": "EstacionamentoController_monitorarVagas",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do estacionamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Monitoramento de vagas realizado com sucesso."
            },
            "404": {
              "description": "Estacionamento não encontrado."
            }
          },
          "summary": "Monitora as vagas do estacionamento",
          "tags": [
            "Estacionamentos"
          ]
        }
      },
      "/estacionamentos/{id}/relatorio": {
        "get": {
          "operationId": "EstacionamentoController_gerarRelatorios",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do estacionamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Relatório gerado com sucesso."
            },
            "404": {
              "description": "Estacionamento não encontrado."
            }
          },
          "summary": "Gera relatórios de ocupação e faturamento",
          "tags": [
            "Estacionamentos"
          ]
        }
      },
      "/usuarios": {
        "post": {
          "operationId": "UsuarioController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Alan Bianchi",
                    "email": "alan@bianchi.com",
                    "senha": "12345",
                    "role": "ADMIN"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Usuário criado com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria um novo usuário",
          "tags": [
            "Usuários"
          ]
        },
        "get": {
          "operationId": "UsuarioController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de usuários retornada com sucesso."
            }
          },
          "summary": "Retorna todos os usuários",
          "tags": [
            "Usuários"
          ]
        }
      },
      "/usuarios/{id}": {
        "get": {
          "operationId": "UsuarioController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do usuário",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Usuário encontrado."
            },
            "404": {
              "description": "Usuário não encontrado."
            }
          },
          "summary": "Retorna um usuário pelo ID",
          "tags": [
            "Usuários"
          ]
        },
        "put": {
          "operationId": "UsuarioController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do usuário",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Alan Bianchi Atualizado",
                    "email": "alan@bianchi.com",
                    "senha": "54321",
                    "role": "CLIENT"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Usuário atualizado com sucesso."
            },
            "404": {
              "description": "Usuário não encontrado."
            }
          },
          "summary": "Atualiza os dados de um usuário",
          "tags": [
            "Usuários"
          ]
        },
        "delete": {
          "operationId": "UsuarioController_delete",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do usuário",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Usuário excluído com sucesso."
            },
            "404": {
              "description": "Usuário não encontrado."
            }
          },
          "summary": "Exclui um usuário pelo ID",
          "tags": [
            "Usuários"
          ]
        }
      },
      "/planos-tarifacao": {
        "get": {
          "operationId": "PlanoTarifacaoController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de planos de tarifação retornada com sucesso."
            }
          },
          "summary": "Retorna todos os planos de tarifação",
          "tags": [
            "Planos de Tarifação"
          ]
        },
        "post": {
          "operationId": "PlanoTarifacaoController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "descricao": "Plano de Tarifação Horária",
                    "data_vigencia": "2024-12-15",
                    "taxa_base": 10,
                    "taxa_hora": 5,
                    "taxa_diaria": 50
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Plano de tarifação criado com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria um novo plano de tarifação",
          "tags": [
            "Planos de Tarifação"
          ]
        }
      },
      "/planos-tarifacao/{id}": {
        "get": {
          "operationId": "PlanoTarifacaoController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do plano de tarifação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Plano de tarifação encontrado."
            },
            "404": {
              "description": "Plano de tarifação não encontrado."
            }
          },
          "summary": "Retorna um plano de tarifação pelo ID",
          "tags": [
            "Planos de Tarifação"
          ]
        },
        "patch": {
          "operationId": "PlanoTarifacaoController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do plano de tarifação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "descricao": "Plano de Tarifação Diário",
                    "data_vigencia": "2024-12-20",
                    "taxa_base": 15,
                    "taxa_hora": 3,
                    "taxa_diaria": 100
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Plano de tarifação atualizado com sucesso."
            },
            "404": {
              "description": "Plano de tarifação não encontrado."
            }
          },
          "summary": "Atualiza um plano de tarifação",
          "tags": [
            "Planos de Tarifação"
          ]
        },
        "delete": {
          "operationId": "PlanoTarifacaoController_remove",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do plano de tarifação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Plano de tarifação excluído com sucesso."
            },
            "404": {
              "description": "Plano de tarifação não encontrado."
            }
          },
          "summary": "Exclui um plano de tarifação pelo ID",
          "tags": [
            "Planos de Tarifação"
          ]
        }
      },
      "/planos-tarifacao/{id}/calcular-tarifa": {
        "post": {
          "operationId": "PlanoTarifacaoController_calcularTarifa",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do plano de tarifação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "tipoVaga": "carro",
                    "duracao": 3
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tarifa calculada com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Calcula a tarifa com base na duração e no tipo de vaga",
          "tags": [
            "Planos de Tarifação"
          ]
        }
      },
      "/vagas": {
        "get": {
          "operationId": "VagaController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de vagas retornada com sucesso."
            }
          },
          "summary": "Retorna todas as vagas",
          "tags": [
            "Vagas"
          ]
        },
        "post": {
          "operationId": "VagaController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "numero": 101,
                    "id_estacionamento": 1,
                    "status": "disponivel",
                    "tipo": "carro",
                    "reservada": false
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Vaga criada com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria uma nova vaga",
          "tags": [
            "Vagas"
          ]
        }
      },
      "/vagas/{id}": {
        "get": {
          "operationId": "VagaController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da vaga",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Vaga encontrada."
            },
            "404": {
              "description": "Vaga não encontrada."
            }
          },
          "summary": "Retorna uma vaga pelo ID",
          "tags": [
            "Vagas"
          ]
        },
        "patch": {
          "operationId": "VagaController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da vaga",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "numero": 102,
                    "id_estacionamento": 1,
                    "status": "ocupada",
                    "tipo": "moto",
                    "reservada": true
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Vaga atualizada com sucesso."
            },
            "404": {
              "description": "Vaga não encontrada."
            }
          },
          "summary": "Atualiza os dados de uma vaga",
          "tags": [
            "Vagas"
          ]
        },
        "delete": {
          "operationId": "VagaController_remove",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da vaga",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Vaga excluída com sucesso."
            },
            "404": {
              "description": "Vaga não encontrada."
            }
          },
          "summary": "Exclui uma vaga pelo ID",
          "tags": [
            "Vagas"
          ]
        }
      },
      "/vagas/{id}/reservar": {
        "post": {
          "operationId": "VagaController_reservar",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da vaga",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Vaga reservada com sucesso."
            },
            "404": {
              "description": "Vaga não encontrada."
            }
          },
          "summary": "Reserva uma vaga pelo ID",
          "tags": [
            "Vagas"
          ]
        }
      },
      "/vagas/{id}/liberar": {
        "post": {
          "operationId": "VagaController_liberar",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da vaga",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Vaga liberada com sucesso."
            },
            "404": {
              "description": "Vaga não encontrada."
            }
          },
          "summary": "Libera uma vaga pelo ID",
          "tags": [
            "Vagas"
          ]
        }
      },
      "/reservas": {
        "post": {
          "operationId": "ReservaController_createReserva",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "dataReserva": "2024-12-15T10:00:00Z",
                    "dataFim": "2024-12-15T18:00:00Z",
                    "valor": 50.75,
                    "id_usuario": 1,
                    "id_vaga": 2
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Reserva criada com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria uma nova reserva",
          "tags": [
            "Reservas"
          ]
        },
        "get": {
          "operationId": "ReservaController_findAllReservas",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de reservas retornada com sucesso."
            }
          },
          "summary": "Retorna todas as reservas",
          "tags": [
            "Reservas"
          ]
        }
      },
      "/reservas/{id}": {
        "get": {
          "operationId": "ReservaController_findReservaById",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da reserva",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Reserva encontrada."
            },
            "404": {
              "description": "Reserva não encontrada."
            }
          },
          "summary": "Retorna uma reserva pelo ID",
          "tags": [
            "Reservas"
          ]
        },
        "put": {
          "operationId": "ReservaController_updateReserva",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da reserva",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "dataReserva": "2024-12-15T10:00:00Z",
                    "dataFim": "2024-12-15T18:00:00Z",
                    "valor": 70,
                    "id_usuario": 1,
                    "id_vaga": 3
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Reserva atualizada com sucesso."
            },
            "404": {
              "description": "Reserva não encontrada."
            }
          },
          "summary": "Atualiza os dados de uma reserva",
          "tags": [
            "Reservas"
          ]
        },
        "delete": {
          "operationId": "ReservaController_deleteReserva",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da reserva",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Reserva excluída com sucesso."
            },
            "404": {
              "description": "Reserva não encontrada."
            }
          },
          "summary": "Exclui uma reserva pelo ID",
          "tags": [
            "Reservas"
          ]
        }
      },
      "/operacoes": {
        "post": {
          "operationId": "OperacaoController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "descricao": "Operação de entrada",
                    "data_hora": "2024-12-15T10:00:00Z",
                    "id_usuario": 1
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Operação criada com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria uma nova operação",
          "tags": [
            "Operações"
          ]
        },
        "get": {
          "operationId": "OperacaoController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de operações retornada com sucesso."
            }
          },
          "summary": "Retorna todas as operações",
          "tags": [
            "Operações"
          ]
        }
      },
      "/operacoes/{id}": {
        "get": {
          "operationId": "OperacaoController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da operação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operação encontrada."
            },
            "404": {
              "description": "Operação não encontrada."
            }
          },
          "summary": "Retorna uma operação pelo ID",
          "tags": [
            "Operações"
          ]
        },
        "put": {
          "operationId": "OperacaoController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da operação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "descricao": "Operação de saída",
                    "data_hora": "2024-12-15T12:00:00Z",
                    "id_usuario": 2
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Operação atualizada com sucesso."
            },
            "404": {
              "description": "Operação não encontrada."
            }
          },
          "summary": "Atualiza os dados de uma operação",
          "tags": [
            "Operações"
          ]
        },
        "delete": {
          "operationId": "OperacaoController_remove",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID da operação",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Operação excluída com sucesso."
            },
            "404": {
              "description": "Operação não encontrada."
            }
          },
          "summary": "Exclui uma operação pelo ID",
          "tags": [
            "Operações"
          ]
        }
      },
      "/pagamentos": {
        "post": {
          "operationId": "PagamentoController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id_reserva": 1,
                    "metodo_pagamento": "PIX",
                    "valor_pago": 50.75,
                    "data_hora": "2024-12-15T10:00:00Z"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Pagamento criado com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria um novo pagamento",
          "tags": [
            "Pagamentos"
          ]
        },
        "get": {
          "operationId": "PagamentoController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de pagamentos retornada com sucesso."
            }
          },
          "summary": "Retorna todos os pagamentos",
          "tags": [
            "Pagamentos"
          ]
        }
      },
      "/pagamentos/{id}": {
        "get": {
          "operationId": "PagamentoController_findById",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do pagamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Pagamento encontrado."
            },
            "404": {
              "description": "Pagamento não encontrado."
            }
          },
          "summary": "Retorna um pagamento pelo ID",
          "tags": [
            "Pagamentos"
          ]
        },
        "put": {
          "operationId": "PagamentoController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do pagamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id_reserva": 1,
                    "metodo_pagamento": "Cartão de Crédito",
                    "valor_pago": 100.5,
                    "data_hora": "2024-12-15T12:00:00Z"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Pagamento atualizado com sucesso."
            },
            "404": {
              "description": "Pagamento não encontrado."
            }
          },
          "summary": "Atualiza os dados de um pagamento",
          "tags": [
            "Pagamentos"
          ]
        },
        "delete": {
          "operationId": "PagamentoController_delete",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do pagamento",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Pagamento excluído com sucesso."
            },
            "404": {
              "description": "Pagamento não encontrado."
            }
          },
          "summary": "Exclui um pagamento pelo ID",
          "tags": [
            "Pagamentos"
          ]
        }
      },
      "/clientes": {
        "post": {
          "operationId": "ClienteController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Alan Bianchi",
                    "email": "alan@bianchi.com",
                    "senha": "12345",
                    "telefone": "11999999999"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Cliente criado com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Cria um novo cliente",
          "tags": [
            "Clientes"
          ]
        },
        "get": {
          "operationId": "ClienteController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": "Lista de clientes retornada com sucesso."
            }
          },
          "summary": "Retorna todos os clientes",
          "tags": [
            "Clientes"
          ]
        }
      },
      "/clientes/{id}": {
        "get": {
          "operationId": "ClienteController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do cliente",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cliente encontrado."
            },
            "404": {
              "description": "Cliente não encontrado."
            }
          },
          "summary": "Retorna um cliente pelo ID",
          "tags": [
            "Clientes"
          ]
        },
        "put": {
          "operationId": "ClienteController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do cliente",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "nome": "Alan Bianchi Atualizado",
                    "email": "alan@bianchi.com",
                    "telefone": "11988888888"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Cliente atualizado com sucesso."
            },
            "404": {
              "description": "Cliente não encontrado."
            }
          },
          "summary": "Atualiza os dados de um cliente",
          "tags": [
            "Clientes"
          ]
        },
        "delete": {
          "operationId": "ClienteController_delete",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do cliente",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Cliente excluído com sucesso."
            },
            "404": {
              "description": "Cliente não encontrado."
            }
          },
          "summary": "Exclui um cliente pelo ID",
          "tags": [
            "Clientes"
          ]
        }
      },
      "/clientes/{id}/reservarVaga": {
        "post": {
          "operationId": "ClienteController_reservarVaga",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do cliente",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "idVaga": 5,
                    "dataInicio": "2024-12-15T08:00:00Z",
                    "dataFim": "2024-12-15T18:00:00Z"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Reserva de vaga criada com sucesso."
            },
            "400": {
              "description": "Dados inválidos."
            }
          },
          "summary": "Reserva uma vaga para o cliente",
          "tags": [
            "Clientes"
          ]
        }
      },
      "/clientes/{id}/cancelarReserva": {
        "post": {
          "operationId": "ClienteController_cancelarReserva",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "ID do cliente",
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "idReserva": 10
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Reserva de vaga cancelada com sucesso."
            },
            "404": {
              "description": "Reserva não encontrada."
            }
          },
          "summary": "Cancela uma reserva de vaga para o cliente",
          "tags": [
            "Clientes"
          ]
        }
      },
      "/administradores": {
        "post": {
          "operationId": "AdministradorController_create",
          "parameters": [],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        },
        "get": {
          "operationId": "AdministradorController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        }
      },
      "/administradores/{id}": {
        "get": {
          "operationId": "AdministradorController_findOne",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        },
        "put": {
          "operationId": "AdministradorController_update",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        },
        "delete": {
          "operationId": "AdministradorController_delete",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        }
      },
      "/administradores/{id}/adicionarVaga": {
        "post": {
          "operationId": "AdministradorController_adicionarVaga",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        }
      },
      "/administradores/{id}/removerVaga/{vagaId}": {
        "delete": {
          "operationId": "AdministradorController_removerVaga",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "vagaId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "Administrador"
          ]
        }
      },
      "/auth/login": {
        "post": {
          "operationId": "AuthController_login",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "email": "alan@bianchi.com",
                    "senha": "12345"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Login bem-sucedido. Retorna o token JWT."
            },
            "401": {
              "description": "Credenciais inválidas."
            }
          },
          "summary": "Faz login e retorna o token JWT",
          "tags": [
            "Autenticação"
          ]
        }
      }
    },
    "info": {
      "title": "API de Estacionamento",
      "description": "Documentação da API para gerenciamento de estacionamentos, com autenticação e autorização JWT.",
      "version": "1.0",
      "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
      "securitySchemes": {
        "bearer": {
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "type": "http",
          "description": "Insira o token JWT para acessar as rotas protegidas"
        }
      },
      "schemas": {}
    }
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  let urls = options.swaggerUrls
  let customOptions = options.customOptions
  let spec1 = options.swaggerDoc
  let swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (let attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  let ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.initOAuth) {
    ui.initOAuth(customOptions.initOAuth)
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }
  
  window.ui = ui
}
